package com.ospn.osnsdk;

import com.alibaba.fastjson.JSONObject;
import com.ospn.osnsdk.callback.OSNGeneralCallback;
import com.ospn.osnsdk.callback.OSNGeneralCallbackT;
import com.ospn.osnsdk.callback.OSNListener;
import com.ospn.osnsdk.callback.OSNTransferCallback;
import com.ospn.osnsdk.data.OsnFriendInfo;
import com.ospn.osnsdk.data.OsnGroupInfo;
import com.ospn.osnsdk.data.OsnMemberInfo;
import com.ospn.osnsdk.data.OsnMessageInfo;
import com.ospn.osnsdk.data.OsnUserInfo;
import com.ospn.osnsdk.data.serviceInfo.OsnLitappInfo;
import com.ospn.osnsdk.data.serviceInfo.OsnServiceInfo;

import java.io.InputStream;
import java.util.List;

public interface Osnsdk {

    void findObject(String text, OSNGeneralCallback callback);
    void createTempAccount();
    String[] createOsnIdFromMnemonic(byte[] seed, String password);
    String getShadowKeyPubId(String decPwd);
    String signByShadowKey(String hash, String decPwd);

    void setHideEnable1(String str);
    void setHideEnable2(String str);
    void setHideEnable3(String str);
    void setEnable(String key, String value);
    boolean getHideEnable();
    boolean getHideEnable3();
    boolean getEnable(String key);

    void initSDK (String ip, OSNListener listener);
    void resetHost(String ip);
    void networkOn();
    void networkOff();
    void register(String userName, String password, String serviceID, OSNGeneralCallback callback);
    boolean loginWithOsnID (String userID, OSNGeneralCallback callback);
    boolean loginV2 (String userID, String password, String password2, OSNGeneralCallback callback);
    boolean loginWithName (String userName, String password, OSNGeneralCallback callback);
    void logout (OSNGeneralCallback callback);
    String getUserID();
    String getServiceID();
    OsnUserInfo getUserInfo(String userID, OSNGeneralCallbackT<OsnUserInfo> callback);
    OsnGroupInfo getGroupInfo(String groupID, OSNGeneralCallbackT<OsnGroupInfo> callback);
    void getGroupDetail(String groupID, String type, OSNGeneralCallback callback);
    List<OsnMemberInfo> getMemberInfo(String groupID, OSNGeneralCallbackT<List<OsnMemberInfo>> callback);
    void getMemberInfoZone(String groupID, int start, int count, OSNGeneralCallbackT<List<OsnMemberInfo>> callback);
    OsnServiceInfo getServiceInfo(String serviceID, OSNGeneralCallbackT<OsnServiceInfo> callback);
    OsnFriendInfo getFriendInfo(String friendID, OSNGeneralCallbackT<OsnFriendInfo> callback);
    void modifyUserInfo(List<String> keys, OsnUserInfo userInfo, OSNGeneralCallback callback);
    void modifyFriendInfo(List<String> keys, OsnFriendInfo friendInfo, OSNGeneralCallback callback);
    List<String> getFriendList(OSNGeneralCallbackT<List<String>> callback);
    List<String> getGroupList(OSNGeneralCallbackT<List<String>> callback);
    void inviteFriend (String userID, String reason, OSNGeneralCallback callback);
    void deleteFriend (String userID, OSNGeneralCallback callback);
    void acceptFriend (String userID, OSNGeneralCallback callback);
    void rejectFriend (String userID, OSNGeneralCallback callback);
    void acceptMember (String userID, String groupID, OSNGeneralCallback callback);
    void rejectMember (String userID, String groupID, OSNGeneralCallback callback);
    void orderPay (String info, OSNGeneralCallback callback);
    void getOwnerSign(String groupID, OSNGeneralCallback callback);
    void getGroupSign (String groupID, String info, OSNGeneralCallback callback);
    void setGroupOwner (String groupID, String owner, OSNGeneralCallback callback);
    void addGroupManager(String groupID, List<String> memberIds, OSNGeneralCallback callback);
    void delGroupManager(String groupID, List<String> memberIds, OSNGeneralCallback callback);
    void saveGroup(String groupID, int status, OSNGeneralCallback callback);
    void getRedPacket (String info, String userID, OSNGeneralCallback callback);
    JSONObject sendMessage (String text, String userID, OSNGeneralCallback callback);
    JSONObject sendMessageNoCallback (String text, String userID);
    void sendMessageAlone(String text, String userID, OSNGeneralCallback callback);
    void sendDynamic (String text, OSNGeneralCallback callback);
    void sendBroadcast (String content, OSNGeneralCallback callback);
    void deleteMessage(String hash, String osnID, OSNGeneralCallback callback);
    List<OsnMessageInfo> loadMessage (String userID, long timestamp, int count, boolean before, OSNGeneralCallbackT<List<OsnMessageInfo>> callback);
    void createGroup (String groupName, List<String> member, int type, String portrait, OSNGeneralCallback callback);
    void createGroup2 (String groupName, List<String> member, int type, String portrait,String owner2, OSNGeneralCallback callback);
    void joinGroup(String groupID, String reason, String invitation, OSNGeneralCallback callback);
    void addMember (String groupID, List<String> members, OSNGeneralCallback callback);
    void delMember (String groupID, List<String> members, OSNGeneralCallback callback);
    void quitGroup (String groupID, OSNGeneralCallback callback);
    void rejectGroup (String groupID, OSNGeneralCallback callback);
    void dismissGroup (String groupID, OSNGeneralCallback callback);
    void muteGroup(String groupID, boolean state, int mode, List<String> members, OSNGeneralCallback callback);
    void billboard(String groupID, String text, OSNGeneralCallback callback);
    void modifyGroupInfo(List<String> keys, OsnGroupInfo groupInfo, OSNGeneralCallback callback);
    void modifyMemberInfo(List<String> keys, OsnMemberInfo memberInfo, OSNGeneralCallback callback);
    void uploadData(String fileName, String type, byte[] data, OSNTransferCallback callback);
    void uploadData(String fileName, String type, InputStream inputStream, OSNTransferCallback callback);
    void downloadData(String remoteUrl, String localPath, OSNTransferCallback callback);
    void lpLogin(OsnLitappInfo litappInfo, String url, OSNGeneralCallback callback);
    void simpleLogin(String target, String url, OSNGeneralCallback callback);
    void setTempAccount(String tempAcc, OSNGeneralCallback callback);
    void recall(String to, String msgHash, OSNGeneralCallback callback);
    void setRole(String key, String value, OSNGeneralCallback callback);
    void allowGroupAddFriend(String value,String groupId,OSNGeneralCallback callback);
    void isGroupForward(String value,String groupId,OSNGeneralCallback callback);
    void isGroupCopy(String value,String groupId,OSNGeneralCallback callback);
    void isClearChats(String value,String groupId,OSNGeneralCallback callback);
    void topMessage(String time,String value,String groupId,OSNGeneralCallback callback);
    void deleteTopMessage(List<String> time,String groupId,OSNGeneralCallback callback);

    void upDescribes(String key,String value,String user,OSNGeneralCallback callback);
    void upDescribe(String key,String value,String group,OSNGeneralCallback callback);
    void upPrivateInfo(String key,String value,String group,OSNGeneralCallback callback);
    void upAttribute(String key,String value,String group,OSNGeneralCallback callback);
    void removeDescribes(String key, OSNGeneralCallback callback);
    void deleteMessageTo(String to, String msgHash, OSNGeneralCallback callback);
    void completeMessage(String hash, String from);
    boolean syncFriend();
    boolean syncGroup();

    String hashData(byte[] data);
    String signData(byte[] data);
    boolean verifyData(String osnID, byte[] data, String sign);
    String encryptData(String osnID, byte[] data);
}
